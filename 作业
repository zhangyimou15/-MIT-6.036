#Code for signed distance!
import numpy as np
# x is dimension d by 1
# th is dimension d by 1
# th0 is a scalar
# return 1 by 1 matrix of signed distance
a=np.matrix([[1,2,3],[4,5,6],[7,8,9]])
c=a.T
print(c)


#作业1.2，答案，编写距离
import numpy as np
# x is dimension d by 1
# th is dimension d by 1
# th0 is a scalar
# return 1 by 1 matrix of signed distance
def signed_dist(x, th, th0):
   return ((th.T@x) + th0) / length(th)



import numpy as np
# x is dimension d by 1
# th is dimension d by 1
# th0 is a scalar
# return 1 by 1 matrix of signed distance
A = np.array([[1,1,1],[2,2,2],[3,3,3]])
B = np.array([[1,0,0],[2,2,0],[3,3,3]])
b=np.sum(A==B, axis=1)
print(b)
[1 2 3] 

import numpy as np
# x is dimension d by 1
# th is dimension d by 1
# th0 is a scalar
# return 1 by 1 matrix of signed distance
A = np.array([[1,1,1],[2,2,2],[3,3,3]])
B = np.array([[1,0,0],[2,2,0],[3,3,3]])
b=np.sum(A==B, axis=0)
print(b)
[3 2 1]


import numpy as np
# x is dimension d by 1
# th is dimension d by 1
# th0 is a scalar
# return 1 by 1 matrix of signed distance
A = np.array([[1,1,1],[2,2,2],[3,3,3]])
B = np.array([[1,0,0],[2,2,0],[3,3,3]])
print(A==B)

[[ True False False]
 [ True  True False]
 [ True  True  True]]

import numpy as np
# x is dimension d by 1
# th is dimension d by 1
# th0 is a scalar
# return 1 by 1 matrix of signed distance
A = np.array([[1,1,1],[2,2,2],[3,3,3]])
B = np.array([[1,2,3]])
print(A==B)

[[ True False False]
 [False  True False]
 [False False  True]]


import numpy as np
a=np.sign(np.array([-3,0,5]))
print(a)
[-1  0  1]
